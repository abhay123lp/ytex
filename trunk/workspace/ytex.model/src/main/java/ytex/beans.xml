<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">

	<!--
		the transactional advice (what 'happens'; see the <aop:advisor/> bean
		below)
	-->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<!--
		ensure that the above transactional advice runs for any execution of
		an operation defined by the FooService interface
	-->
	<aop:config>
		<aop:pointcut id="ytexDaoOperation" expression="execution(* ytex.dao.*Dao.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="ytexDaoOperation" />
	</aop:config>
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:ytex.properties" />
	</bean>
	<bean id="searchProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:/ytex/search.properties" />
	</bean>
	<bean id="hibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>
				<!--   
				<prop key="hibernate.show_sql">true</prop>
				-->
				<prop key="hibernate.default_schema">${db.schema}</prop>
				<!--  
				-->
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
			</props>
		</property>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingResources">
			<list>
				<value>ytex/model/Document.hbm.xml</value>
				<value>ytex/model/NamedEntityRegex.hbm.xml</value>
				<value>ytex/model/SegmentRegex.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties" ref="hibernateProperties" />
	</bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="documentDao" class="ytex.dao.DocumentDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="namedEntityRegexDao" class="ytex.dao.NamedEntityRegexDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="segmentRegexDao" class="ytex.dao.SegmentRegexDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="umlsFirstWordDao" class="ytex.dao.UMLSFirstWordDaoImpl">
		<property name="dataSource" ref="dataSource" />
		<property name="searchProperties" ref="searchProperties" />
	</bean>
	<bean id="documentSearchDao" class="ytex.dao.DocumentSearchDaoImpl">
		<property name="dataSource" ref="dataSource" />
		<property name="searchProperties" ref="searchProperties" />
	</bean>
</beans>