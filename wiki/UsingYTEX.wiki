#summary Using YTEX
#labels Phase-Deploy
<wiki:toc max_depth="2" />

=Using YTEX=
This document presumes familiarity with [http://uima.apache.org/index.html UIMA] and [http://ohnlp.sourceforge.net/cTAKES/ cTAKES].

=Annotating Documents=
YTEX is based on UIMA, and standard UIMA Tools can be used to annotate documents with YTEX: you can annotate documents using the standard UIMA Document Analyzer and Collection Processing Engine.  YTEX is distributed with the `YTEXPipeline.xml` analysis engine configuration based on the cTAKES/ARC pipeline with the following modifications:
  * `SentenceAnnotator`: modified to not break sentences on newlines, and to break sentences at (certain) periods.
  * `SegmentRegexAnnotator`: annotate sections based on regular expressions.
  * `DictionaryLookup`: Configured to use the SNOMED-CT sub-vocabulary of the UMLS.
  * `NamedEntityRegexAnnotator`: annotate named entities based on regular expressions.
  * `NegexAnnotator`: this replaces the cTAKES NegationAnnotator.  The NegexAnnotator is based on the Negex negation detection algorithm.
  * `DBConsumer`: Stores annotatations and the XML CAS representation in the database
You are of course welcome to modify/add/remove annotators to the analysis engine and modify configuration parameters.

==UIMA Document Analyzer==
 * Execute `YTEX_HOME\ytexDocumentAnalyzer.bat` and set the following options:
   ** Input Directory: `YTEX_HOME\examples\weka-fracture\collection`
   ** Output Directory: `YTEX_HOME\examples\weka-fracture\ytexoutput` (create this directory)
   ** Analysis Engine: `YTEX_HOME\config\desc\ytex\uima\YTEXPipeline.xml`
 * Click Run
 * You can then view the anaysis results by double-clicking individual documents.

==UIMA Collection Processing Engine w/ DBCollectionReader==
Clinical Documents for the VACS project are stored in a database.  We developed an UIMA CollectionReader that retrieves these documents for annotation (thereby avoiding exporting the documents to the file system).  The DBCollection reader works as follows:
  # read all document unique ids into an internal list
  # iterate through each id in the list, and retrieve the document for annotation.

Documents in a database typically are given a Unique ID, and are cross-referenced with other information (e.g. patient id, document type, document date, etc.).  This document id can be stored as a document annotation, which in turn will be stored in the database, along with other document annotations.  This allows you to cross-reference annotation data with other document data.

YTEX comes with a DocumentKey annotation; the document primary key can be mapped to the DocumentKey.  The document key query can return the following fields
  * `uid`: a numeric document identifier
  * `studyid`: numeric patient identifier
  * `document_type_id`: a numeric document type id (foreign key to `ref_document_type` table)
  * `site_id`: character site identifier

To configure and execute the CPE, do the following:
  # Start CPE
  Execute `YTEX_HOME\ytexCPE.bat`, 
  # Clear Settings 
  In case of any settings are specified File->Clear All 
  # Configure DBCollectionReader
  For the Descriptor, specify `YTEX_HOME\config\desc\ytex\vacs\uima\DBCollectionReader.xml`.
  The 'Query Document Keys' and 'Query Get Document' parameters will appear.
    * Specify query to retrieve document keys.  
    {{{
    select document_id uid
		from document
    }}}
    * Specify query to retrieve individual document:
    {{{
		select doc_text 
		from document
		where document_id = :uid
		}}}
  # Configure Analysis Engine
  Click on the 'Add' button in the 'Analysis Engine' section, and select `YTEX_HOME\config\desc\ytex\uima\YTEXPipeline.xml`
    * analysis_batch: Documents can be assigned a 'group' or analysis_batch.  specify 'test2' here.
  # Run the CPE
  Click the 'Play' button
  # View results
  {{{
  select * from 
  v_document where analysis_batch = 'test2'
  }}}
  You will note that the uid column is set, and refers to the source document_id.

=Retrieving Documents=

==Using YTEX Views==
Some simple queries (replace schema to match your configuration):
  * View all documents
{{{
select top 1000 document_id, doc_text
from <schema>.v_document
}}}
  * View all sentences that contain a negated UMLS Concept
{{{
select * 
from <schema>.v_document_cui_sent
where code = 'C0024228'
and certainty = -1
}}}

==Using YTEX DBAnnotationViewer==
For a graphical representation of document annotations, use the DBAnnotationViewer.  This modified viewer retrieves the document CAS from the database (as opposed to the plain-vanilla AnnotationViewer which retrieves the CAS from the file system).
  * Execute `YTEX_HOME\ytexDBAnnotationViewer.bat`
  * Select `YTEX_HOME\config\desc\ytex\uima\YTEXPipeline.xml` as the annotation engine
  * Specify document id (e.g. from one of the views)

=Semantic Search Engine=
The semantic search engine allows searching by UMLS Concept id, negation status, patient id, and document date.  It is preconfigured to work with the patient id and document date from VACS Annotations, but can be reconfigured to retrieve these annotations from other tables.  The semantic search engine can also be configured to execute full-text searches (the SQL Server Full Text Index must be enabled for this).

To start the semantic search web app, execute `YTEX_HOME\ytexWeb.cmd`

To use the semantic search web app,
  # Open a browser and navigate to http://localhost:9080/ytex.web
  # login with username 'scott' and password 'wombat'

=Configuring YTEX=
==Named Entity Lookup Table==
==Segments (Sections) Regexs==
==Negation Detection==
==Named Entity Recognition Regexs==