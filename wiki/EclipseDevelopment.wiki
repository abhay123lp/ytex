#summary Developing YTEX with eclipse

= Introduction =
This page describes checking YTEX out and setting up an eclipse development environment.  To understand what's going on, you need a solid grasp of UIMA.  YTEX also makes extensive use of [http://www.springsource.org/about Spring] and [http://www.hibernate.org/ Hibernate].  Many tasks are automated with ant; we assume you know how to configure and execute ant tasks in eclipse.

== Prerequisites ==
  * Eclipse Galileo or higher (Helios)
  * [http://www.eclipse.org/subversive/ Eclipse SVN Plugins]
  * [http://tomcat.apache.org/download-60.cgi Apache Tomcat v6.x]
  * [http://sourceforge.net/projects/ant-contrib/ Ant-Contrib] (included with ytex-with-dependencies)
  * Jdbc Drivers (included with ytex-with-dependencies, see [Installation])
  * LVG 2010 (see [Installation])
  * UMLS Database Export (see [Installation])
  * SQL Server Users: add the SQL Server JDBC Driver DLLs to your path. 
    ** Control Panel -> Edit System Environment Variables -> Environment Variables. 
    ** Add/Edit the `PATH` variable in the user variable section
    ** set it to e.g. `C:\java\sqljdbc_3.0\enu\auth\x86` (of course this should match your environment)

== Setup ==
  * Setup Eclipse Workspace 
  Assume the workspace is e.g. `c:\projects\ytex`.  Open eclipse, and select this workspace.
  * Checkout
    ** Setup Repository: https://ytex.googlecode.com/svn/
    ** Checkout the latest stable version.  The trunk is used for active development.  For a stable version, look at the svn tags.  Right click on v0.3 -> find / checkout as -> find projects in the children of the selected resource
  * Create config.local project
  We try to keep local configuration settings separate from checked-in code.  Create a java project named `config.local`, and create a `ytex.properties` file in the root of this project's source directory, i.e. `${workspace_loc}/config.local/src/ytex.properties`.  Use `${workspace_loc}/config/desc/ytex.properties.*.example` as a template.
  * Setup Workspace Preferences: 
  Go to Window -> Preferences
    ** Server -> Runtime Environment -> Add -> Apache Tomcat v6.0
    ** Set ytex.properties variable for Ant:
       **  Ant -> Runtime -> Properties -> Add Property
       ** Property Name: `ytex.properties`, value: `${workspace_loc}/config.local/src/ytex.properties`
    ** Add `ant-contrib.jar` to the ant classpath:
    Ant -> Runtime -> Classpath -> Global Entries -> Add Jar, and add `ant-contrib.jar`
  * Setup config files: execute `templateToConfig` in build/build-setup.xml`
  * Setup lvg: 
    ** copy the `lvg2010.tgz` file to the directory that contains the workspace.  e.g. if your workspace is `c:\projects\ytex`, copy the lvg file to `c:\projects`.
    ** execute `setup.lvg` in build/build-setup.xml`
  * Setup Database:
    ** copy database archive (e.g. `umls-mysql.zip`) to the directory that contains the workspace.
    ** execute `all` in `data/build.xml`
  * Select all projects -> Right Click -> Refresh
  Now everything should compile.

== Tomcat setup ==
  * Open Servers tab, Add Tomcat Server, Add ytex.web to server
  * Open Server -> Open Launch Configuration
    ** Environment: add PATH=${workspace_loc}/libs.system/sqljdbc_3.0/enu/auth/x86
    ** Arguments: add
    -Djava.util.logging.config.file=file:///${workspace_loc}/config/desc/Logger.properties 
    -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
    -Dorg.apache.el.parser.COERCE_TO_ZERO=false
    ** Classpath: Add libs.system to server classpath

Everything should work